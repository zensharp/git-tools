#!/usr/bin/env bash

set -eu

branch=$(git branch --show-current)
args=""

# Functions
function addArgument
{
	args="$args $@"
}

function getMergeRequestDetails
{
	if [ -z "$branch" ]
	then
		echo "[Error] You are currently not on a branch. Aborting..."
		exit 1
	fi

	temp="--push-option merge_request.create"
	if echo $branch | grep -q '^feature/'
	then
		name=${branch#feature/}
		if echo $name | grep -q '^[[:digit:]]*$'
		then
			title="Merge request for #$name"
			description="This MR will implement #$name."
		else
			title="Merge request for feature \"$name\""
			description="This MR will implement feature \"$name\"."
		fi
		temp="$temp --push-option merge_request.title='$title'"
		temp="$temp --push-option merge_request.description='$description'"
	fi

	echo $temp
}

# Begin script
while test $# -gt 0
do
	value="$1"
	case "$value" in
		-c|--create)
			addArgument $(getMergeRequestDetails)
			;;
		-d|--draft)
			addArgument "--push-option merge_request.draft"
			;;
		-cd|-dc)
			addArgument $(getMergeRequestDetails)
			addArgument "--push-option merge_request.draft"
			;;
		-m|--merge-when-pipeline-succeeds)
			addArgument "--push-option merge_request.merge_when_pipeline_succeeds"
			;;
		*)
			addArgument "$value"
			;;
	esac
	shift
done

command="git push --set-upstream origin $branch $args"
eval $command
